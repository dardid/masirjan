{% extends 'front.html.twig' %}
{% block title %}صفحه نخست{% endblock %}
{% block pageBody %}
    <div class="container-firstnews">
        <img class="vh-100 vw-100 pb-1 img-fluid top-news-banner" src="{{ asset('files/n1.jpg') }}">
        <div class="text-block-firstnews col-md-6">
            <h3 class="ms-bg-primary p-2">فریاد انتقام ملت</h3>
            <p> حضرت آیت‌الله خامنه‌ای: «‌فریاد انتقام ملت ایران، سوخت حقیقی موشک‌هایی بود که پایگاه آمریکایی را زیر و رو کرد.» ۱۳۹۸/۱۰/۲۷</p>
        </div>
        <div class="card card-top-news float-left">
            <div class="card-body">
                <a class="text-light" href="{{ path('home') }}">
                    <div class="row">
                        <div class="col-4">
                            <img class="img-thumbnail" src="{{ asset('images/top1.jpg') }}">
                        </div>
                        <div class="col-8">
                            <h3>خبر آزمایشی ۱</h3>
                            <p>1398/06/22</p>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="jbt1" style="background-image: url('{{ asset('images/jbt1.jpg') }}');">
        <div class="jumbotron pt-2 pl-4 jbt2" >
            <div class="row">
                <div class="col-sm-12 col-md-2">
                    <i class="pr-md-5 fa fa-bookmark text-danger ms-h1-bookmark"></i>
                </div>
                <div class="col-sm-12 col-md-8">
                    <h2 class="pt-3 text-light">تاریخچه موسسه فرهنگی معراج اندیشه سیرجان</h2>
                    <hr class="my-4 text-light">
                    <p class="lead text-light">
                        {{ config.aboutUs | raw }}
                    </p>
                    <a class="btn btn-link text-right" href="{{ path('staticPages',{'url':'history'}) }}">بیشتر</a>
                </div>
                <div class="col-sm-12 col-md-2 ms-share-bookmark">
                    <i class="fa fa-share pb-0"></i>
                    <i class="fa fa-quote-left"></i>
                    <i class="fa fa-play-circle"></i>
                </div>
            </div>
        </div>
    </div>
    <h2 class="text-dark p-2 mr-0 border-right border-dark" style="max-width:20%; background-color: #f4da6c">مدیریت فرهنگی</h2>

    <div class="container">
        <div class="row pt-2">
            <div class="col-sm-12 col-md-6">
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_honar.jpg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون هنر</h2>
                        </div>
                    </div>
                </div>
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_ejtemaei.jpg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون اجتماعی</h2>
                        </div>
                    </div>
                </div>
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_farhangi.jpeg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون فرهنگی</h2>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 pl-4">
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_qoran.jpg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون قرآن</h2>
                        </div>
                    </div>
                </div>
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_defa.jpg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون دفاع مقدس</h2>
                        </div>
                    </div>
                </div>
                <div class="row pb-1">
                    <div class="col-12">
                        <div class="img-hover-zoom">
                            <img class="b1-img" src="{{ asset('images/kanoon_ketab.jpg') }}">
                            <h2 class="display-1 p-3 m-2 b1-title">کانون کتاب خوانی</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <style>
        .counter {
            background-color:#f5f5f5;
            padding: 20px 0;
            border-radius: 5px;
        }

        .count-title {
            font-size: 40px;
            font-weight: normal;
            margin-top: 10px;
            margin-bottom: 0;
            text-align: center;
        }

        .count-text {
            font-size: 13px;
            font-weight: normal;
            margin-top: 10px;
            margin-bottom: 0;
            text-align: center;
        }

        .fa-2x {
            margin: 0 auto;
            float: none;
            display: table;
            color: #4ad1e5;
        }
    </style>

    <div class="container py-3 my-3" style="background-color: #04afa6">
        <div class="row text-center">
            <div class="col">
                <div class="counter rounded-circle">
                    <i class="fa fa-user fa-2x"></i>
                    <h2 class="timer count-title count-number" data-to="100" data-speed="1500"></h2>
                    <p class="count-text ">تعداد مخاطبان</p>
                </div>
            </div>
            <div class="col">
                <div class="counter rounded-circle">
                    <i class="fa fa-coffee fa-2x"></i>
                    <h2 class="timer count-title count-number" data-to="1700" data-speed="1500"></h2>
                    <p class="count-text ">تعداد مسابقات</p>
                </div>
            </div>
            <div class="col">
                <div class="counter rounded-circle">
                    <i class="fa fa-door-open fa-2x"></i>
                    <h2 class="timer count-title count-number" data-to="11900" data-speed="1500"></h2>
                    <p class="count-text ">تعداد کلاس‌ها</p>
                </div></div>
            <div class="col">
                <div class="counter rounded-circle">
                    <i class="fa fa-calendar fa-2x"></i>
                    <h2 class="timer count-title count-number" data-to="157" data-speed="1500"></h2>
                    <p class="count-text ">تعداد رویدادها</p>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        (function ($) {
            $.fn.countTo = function (options) {
                options = options || {};

                return $(this).each(function () {
                    // set options for current element
                    var settings = $.extend({}, $.fn.countTo.defaults, {
                        from:            $(this).data('from'),
                        to:              $(this).data('to'),
                        speed:           $(this).data('speed'),
                        refreshInterval: $(this).data('refresh-interval'),
                        decimals:        $(this).data('decimals')
                    }, options);

                    // how many times to update the value, and how much to increment the value on each update
                    var loops = Math.ceil(settings.speed / settings.refreshInterval),
                        increment = (settings.to - settings.from) / loops;

                    // references & variables that will change with each update
                    var self = this,
                        $self = $(this),
                        loopCount = 0,
                        value = settings.from,
                        data = $self.data('countTo') || {};

                    $self.data('countTo', data);

                    // if an existing interval can be found, clear it first
                    if (data.interval) {
                        clearInterval(data.interval);
                    }
                    data.interval = setInterval(updateTimer, settings.refreshInterval);

                    // initialize the element with the starting value
                    render(value);

                    function updateTimer() {
                        value += increment;
                        loopCount++;

                        render(value);

                        if (typeof(settings.onUpdate) == 'function') {
                            settings.onUpdate.call(self, value);
                        }

                        if (loopCount >= loops) {
                            // remove the interval
                            $self.removeData('countTo');
                            clearInterval(data.interval);
                            value = settings.to;

                            if (typeof(settings.onComplete) == 'function') {
                                settings.onComplete.call(self, value);
                            }
                        }
                    }

                    function render(value) {
                        var formattedValue = settings.formatter.call(self, value, settings);
                        $self.html(formattedValue);
                    }
                });
            };

            $.fn.countTo.defaults = {
                from: 0,               // the number the element should start at
                to: 0,                 // the number the element should end at
                speed: 1000,           // how long it should take to count between the target numbers
                refreshInterval: 100,  // how often the element should be updated
                decimals: 0,           // the number of decimal places to show
                formatter: formatter,  // handler for formatting the value before rendering
                onUpdate: null,        // callback method for every time the element is updated
                onComplete: null       // callback method for when the element finishes updating
            };

            function formatter(value, settings) {
                return value.toFixed(settings.decimals);
            }
        }(jQuery));

        jQuery(function ($) {
            // custom formatting example
            $('.count-number').data('countToOptions', {
                formatter: function (value, options) {
                    return value.toFixed(options.decimals).replace(/\B(?=(?:\d{3})+(?!\d))/g, ',');
                }
            });

            // start all the timers
            $('.timer').each(count);

            function count(options) {
                var $this = $(this);
                options = $.extend({}, options || {}, $this.data('countToOptions') || {});
                $this.countTo(options);
            }
        });
    </script>
{% endblock %}
